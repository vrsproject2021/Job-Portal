@model JobPortal.Models.CompanyModel
@{
    ViewBag.Title = "CompanyModel";
    Layout = "~/Views/Shared/_EmployerLayout.cshtml";
}

<center>
    <div class="container-box-form">
        <h2>Company Details</h2>

        @using (Html.BeginForm("CompanyModel", "Employer", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.company_name, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.company_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.company_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.profile_description, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.profile_description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.profile_description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="form-group">
                    @*<div class="row">*@
                    @*<label class="control-label col-md-10">Business Stream</label>*@


                <div class="col-md-15">
                    @Html.DropDownListFor(model => model.business_stream_id ,new List<SelectListItem>
                    {
                    new SelectListItem() {Text = "Select Business Stream", Value="Select Business Stream"},
                    new SelectListItem() {Text = "IT", Value="1"},
                    new SelectListItem() {Text = "Construction", Value="2"},
                    //new SelectListItem() {Text = "Contract", Value="Contract"},
                    //new SelectListItem() {Text = "Temporary", Value="Temporary"},
                    }, new { @class = "form-control" })
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.business_stream_id, new List<SelectListItem>
                        {
                        new SelectListItem() {Text = "Select Business Stream", Value="Select Business Stream"},
                        new SelectListItem() {Text = "IT", Value="1"},
                        new SelectListItem() {Text = "Construction", Value="2"},
                        //new SelectListItem() {Text = "Contract", Value="Contract"},
                        //new SelectListItem() {Text = "Temporary", Value="Temporary"},
                        }, new { @class = "form-control" })


                        @Html.ValidationMessageFor(model => model.business_stream_id, "", new { @class = "text-danger" })
                    </div>
                    @*</div>*@
                </div>

                <br /><br />
                <div class="form-group">
                    @Html.LabelFor(model => model.establishment_date, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.establishment_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.establishment_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.company_website_url, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.company_website_url, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.company_website_url, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <input type="submit" value="Post" class="btn btn-default" />
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to CompanyModel", "CompanyModel")
        </div>
    </div>
</center>














<div class="section-top-border">
    <div class="row">
        <div class="col-lg-8 col-md-8">
            <h3 class="mb-30">Form Element</h3>


            <form action="#">



                
                    <h2>Company Details</h2>

                    @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.company_name, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.company_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.company_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.profile_description, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.profile_description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.profile_description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <br />
                            

                            <br /><br />
                           

                            <div class="form-group">
                                @Html.LabelFor(model => model.company_website_url, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.company_website_url, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.company_website_url, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                <input type="submit" value="Post" class="btn btn-default" />
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to CompanyModel", "CompanyModel")
                    </div>
                


            </form>
        </div>
        <div class="col-lg-3 col-md-4 mt-sm-30">
            <div class="single-element-widget">
                <h3 class="mb-30">Switches</h3>
                <div class="switch-wrap d-flex justify-content-between">
                    <p>01. Sample Switch</p>
                    <div class="primary-switch">
                        <input type="checkbox" id="default-switch">
                        <label for="default-switch"></label>
                    </div>
                </div>
                <div class="switch-wrap d-flex justify-content-between">
                    <p>02. Primary Color Switch</p>
                    <div class="primary-switch">
                        <input type="checkbox" id="primary-switch" checked>
                        <label for="primary-switch"></label>
                    </div>
                </div>
                <div class="switch-wrap d-flex justify-content-between">
                    <p>03. Confirm Color Switch</p>
                    <div class="confirm-switch">
                        <input type="checkbox" id="confirm-switch" checked>
                        <label for="confirm-switch"></label>
                    </div>
                </div>
            </div>
            <div class="single-element-widget mt-30">
                <h3 class="mb-30">Selectboxes</h3>
                <div class="form-group">
                    @*<div class="row">*@
                    @*<label class="control-label col-md-10">Business Stream</label>*@


                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.business_stream_id, new List<SelectListItem>
                        {
                        new SelectListItem() {Text = "Select Business Stream", Value="Select Business Stream"},
                        new SelectListItem() {Text = "IT", Value="1"},
                        new SelectListItem() {Text = "Construction", Value="2"},
                        //new SelectListItem() {Text = "Contract", Value="Contract"},
                        //new SelectListItem() {Text = "Temporary", Value="Temporary"},
                        }, new { @class = "form-control" })


                        @Html.ValidationMessageFor(model => model.business_stream_id, "", new { @class = "text-danger" })
                    </div>
                    @*</div>*@
                </div>
            </div></br>
            <div class="single-element-widget mt-30">
                <h6 class="mb-30"></h6>
                <div class="form-group">
                    @Html.LabelFor(model => model.establishment_date, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.establishment_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.establishment_date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
        </div>
    </div>
</div>